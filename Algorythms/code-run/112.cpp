/*
112
https://coderun.yandex.ru/problem/seating-arrangements/description?currentPage=1&difficulty=MEDIUM&groups=%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC%D1%8B&pageSize=10&rowNumber=36

112. –†–∞—Å—Å–∞–¥–∫–∞ –≤ –∞—É–¥–∏—Ç–æ—Ä–∏–∏
–≠–∫–∑–∞–º–µ–Ω –ø–æ –±–µ—Ä–ª—è–Ω–¥—Å–∫–æ–º—É —è–∑—ã–∫—É –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤ —É–∑–∫–æ–π –∏ –¥–ª–∏–Ω–Ω–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏. –ù–∞ —ç–∫–∑–∞–º–µ–Ω –ø—Ä–∏—à–ª–æ N —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.
–í—Å–µ –æ–Ω–∏ –ø–æ—Å–∞–∂–µ–Ω—ã –≤ —Ä—è–¥. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø–æ–∑–∏—Ü–∏—è –∫–∞–∂–¥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –∑–∞–¥–∞–µ—Ç—Å—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ–π –Ω–∞ –æ—Å–∏ Ox
(—ç—Ç–∞ –æ—Å—å –≤–µ–¥—ë—Ç –≤–¥–æ–ª—å –¥–ª–∏–Ω–Ω–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏). –î–≤–∞ —á–µ–ª–æ–≤–µ–∫–∞ –º–æ–≥—É—Ç —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å, –µ—Å–ª–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É
–Ω–∏–º–∏ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ D. –ö–∞–∫–æ–µ –Ω–∞–∏–º–µ–Ω—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∏–ø–æ–≤ –±–∏–ª–µ—Ç–æ–≤ –¥–æ–ª–∂–µ–Ω –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å,
—á—Ç–æ–±—ã –Ω–∏–∫–∞–∫–∏–µ –¥–≤–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –±–∏–ª–µ—Ç–∞–º–∏ –Ω–µ –º–æ–≥–ª–∏ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å? –í—ã–≤–µ–¥–∏—Ç–µ —Å–ø–æ—Å–æ–± —Ä–∞–∑–¥–∞—á–∏
–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –±–∏–ª–µ—Ç–æ–≤.

–§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞
–í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –≤—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ N, D (1‚Äâ‚â§ ‚ÄâN‚Äâ‚â§ ‚Äâ10000; 0‚Äâ‚â§ D ‚â§ 10^6).
–í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª ùëã1  ... , –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É
–≤–¥–æ–ª—å –æ—Å–∏ Ox i-–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞

–§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞
–í –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ—á–∫—É –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –≤—ã–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –∞ –≤–æ –≤—Ç–æ—Ä—É—é, —Ä–∞–∑–¥–µ–ª—è—è –ø—Ä–æ–±–µ–ª–∞–º–∏,
–Ω–æ–º–µ—Ä–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ —Ç–æ–º –ø–æ—Ä—è–¥–∫–µ, –≤ –∫–∞–∫–æ–º –æ–Ω–∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –≤–æ –≤—Ö–æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ.



*/

#include <iostream>
#include <algorithm>
#include <vector>
#include <map>

using namespace std;

bool compareSecond(const pair<long, long> a, const pair<long, long> b)
{
    return a.second < b.second;
}

int main()
{
    long n, d;
    cin >> n >> d;
    vector<pair<long, long>> v(n);
    vector<long> ends;
    map<long, long> ans;

    for (long i = 0; i < n; i++)
    {
        long val;
        cin >> val;
        v[i] = {val, i};
    }

    sort(v.begin(), v.end()); // sort by value inc

    ends.push_back(v[0].first + d);
    ans[v[0].second] = 1;

    for (long i = 1; i < n; i++)
    {
        bool hasLower = false;
        long currentVal = v[i].first;
        long currentIdx = v[i].second;
        for (int j = 0; j < ends.size(); j++)
        {
            if (ends[j] < currentVal)
            {
                hasLower = true;
                ends[j] = currentVal + d;
                ans[currentIdx] = j + 1;
                break;
            }
        }

        if (!hasLower)
        {
            ends.push_back(currentVal + d);
            ans[currentIdx] = ends.size();
        }
    }

    sort(v.begin(), v.end(), compareSecond);
    cout << ends.size() << endl;
    for (int i = 0; i < n; i++)
    {
        cout << ans[v[i].second] << " ";
    }

    return 0;
}